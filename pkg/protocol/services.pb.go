/*
*Copyright (c) 2019-2021, Alibaba Group Holding Limited;
*Licensed under the Apache License, Version 2.0 (the "License");
*you may not use this file except in compliance with the License.
*You may obtain a copy of the License at

*   http://www.apache.org/licenses/LICENSE-2.0

*Unless required by applicable law or agreed to in writing, software
*distributed under the License is distributed on an "AS IS" BASIS,
*WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*See the License for the specific language governing permissions and
*limitations under the License.
 */

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: services.proto

package protocol

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/golang/protobuf/ptypes/empty"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Status int32

const (
	Status_Succeed Status = 0
	Status_Failed  Status = 1
)

var Status_name = map[int32]string{
	0: "Succeed",
	1: "Failed",
}
var Status_value = map[string]int32{
	"Succeed": 0,
	"Failed":  1,
}

func (x Status) String() string {
	return proto.EnumName(Status_name, int32(x))
}
func (Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_services_0d241728119f9221, []int{0}
}

type ReportEventResponse_Action int32

const (
	ReportEventResponse_Add    ReportEventResponse_Action = 0
	ReportEventResponse_Change ReportEventResponse_Action = 1
	ReportEventResponse_Delete ReportEventResponse_Action = 2
)

var ReportEventResponse_Action_name = map[int32]string{
	0: "Add",
	1: "Change",
	2: "Delete",
}
var ReportEventResponse_Action_value = map[string]int32{
	"Add":    0,
	"Change": 1,
	"Delete": 2,
}

func (x ReportEventResponse_Action) String() string {
	return proto.EnumName(ReportEventResponse_Action_name, int32(x))
}
func (ReportEventResponse_Action) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_services_0d241728119f9221, []int{5, 0}
}

type UpdateDeviceRequest struct {
	TxId                 string   `protobuf:"bytes,1,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Table                string   `protobuf:"bytes,3,opt,name=table,proto3" json:"table,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateDeviceRequest) Reset()         { *m = UpdateDeviceRequest{} }
func (m *UpdateDeviceRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateDeviceRequest) ProtoMessage()    {}
func (*UpdateDeviceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_services_0d241728119f9221, []int{0}
}
func (m *UpdateDeviceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateDeviceRequest.Unmarshal(m, b)
}
func (m *UpdateDeviceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateDeviceRequest.Marshal(b, m, deterministic)
}
func (dst *UpdateDeviceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateDeviceRequest.Merge(dst, src)
}
func (m *UpdateDeviceRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateDeviceRequest.Size(m)
}
func (m *UpdateDeviceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateDeviceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateDeviceRequest proto.InternalMessageInfo

func (m *UpdateDeviceRequest) GetTxId() string {
	if m != nil {
		return m.TxId
	}
	return ""
}

func (m *UpdateDeviceRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateDeviceRequest) GetTable() string {
	if m != nil {
		return m.Table
	}
	return ""
}

type UpdateDeviceResponse struct {
	TxId                 string   `protobuf:"bytes,1,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
	Status               Status   `protobuf:"varint,2,opt,name=status,proto3,enum=protocol.Status" json:"status,omitempty"`
	Detail               string   `protobuf:"bytes,3,opt,name=detail,proto3" json:"detail,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateDeviceResponse) Reset()         { *m = UpdateDeviceResponse{} }
func (m *UpdateDeviceResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateDeviceResponse) ProtoMessage()    {}
func (*UpdateDeviceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_services_0d241728119f9221, []int{1}
}
func (m *UpdateDeviceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateDeviceResponse.Unmarshal(m, b)
}
func (m *UpdateDeviceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateDeviceResponse.Marshal(b, m, deterministic)
}
func (dst *UpdateDeviceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateDeviceResponse.Merge(dst, src)
}
func (m *UpdateDeviceResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateDeviceResponse.Size(m)
}
func (m *UpdateDeviceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateDeviceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateDeviceResponse proto.InternalMessageInfo

func (m *UpdateDeviceResponse) GetTxId() string {
	if m != nil {
		return m.TxId
	}
	return ""
}

func (m *UpdateDeviceResponse) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_Succeed
}

func (m *UpdateDeviceResponse) GetDetail() string {
	if m != nil {
		return m.Detail
	}
	return ""
}

type CheckHealthRequest struct {
	TxId                 string   `protobuf:"bytes,1,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckHealthRequest) Reset()         { *m = CheckHealthRequest{} }
func (m *CheckHealthRequest) String() string { return proto.CompactTextString(m) }
func (*CheckHealthRequest) ProtoMessage()    {}
func (*CheckHealthRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_services_0d241728119f9221, []int{2}
}
func (m *CheckHealthRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckHealthRequest.Unmarshal(m, b)
}
func (m *CheckHealthRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckHealthRequest.Marshal(b, m, deterministic)
}
func (dst *CheckHealthRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckHealthRequest.Merge(dst, src)
}
func (m *CheckHealthRequest) XXX_Size() int {
	return xxx_messageInfo_CheckHealthRequest.Size(m)
}
func (m *CheckHealthRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckHealthRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CheckHealthRequest proto.InternalMessageInfo

func (m *CheckHealthRequest) GetTxId() string {
	if m != nil {
		return m.TxId
	}
	return ""
}

type CheckHealthResponse struct {
	TxId                 string   `protobuf:"bytes,1,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
	Status               Status   `protobuf:"varint,2,opt,name=status,proto3,enum=protocol.Status" json:"status,omitempty"`
	Detail               string   `protobuf:"bytes,3,opt,name=detail,proto3" json:"detail,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckHealthResponse) Reset()         { *m = CheckHealthResponse{} }
func (m *CheckHealthResponse) String() string { return proto.CompactTextString(m) }
func (*CheckHealthResponse) ProtoMessage()    {}
func (*CheckHealthResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_services_0d241728119f9221, []int{3}
}
func (m *CheckHealthResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckHealthResponse.Unmarshal(m, b)
}
func (m *CheckHealthResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckHealthResponse.Marshal(b, m, deterministic)
}
func (dst *CheckHealthResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckHealthResponse.Merge(dst, src)
}
func (m *CheckHealthResponse) XXX_Size() int {
	return xxx_messageInfo_CheckHealthResponse.Size(m)
}
func (m *CheckHealthResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckHealthResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CheckHealthResponse proto.InternalMessageInfo

func (m *CheckHealthResponse) GetTxId() string {
	if m != nil {
		return m.TxId
	}
	return ""
}

func (m *CheckHealthResponse) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_Succeed
}

func (m *CheckHealthResponse) GetDetail() string {
	if m != nil {
		return m.Detail
	}
	return ""
}

type ReportEventRequest struct {
	TxId                 string   `protobuf:"bytes,1,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReportEventRequest) Reset()         { *m = ReportEventRequest{} }
func (m *ReportEventRequest) String() string { return proto.CompactTextString(m) }
func (*ReportEventRequest) ProtoMessage()    {}
func (*ReportEventRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_services_0d241728119f9221, []int{4}
}
func (m *ReportEventRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReportEventRequest.Unmarshal(m, b)
}
func (m *ReportEventRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReportEventRequest.Marshal(b, m, deterministic)
}
func (dst *ReportEventRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReportEventRequest.Merge(dst, src)
}
func (m *ReportEventRequest) XXX_Size() int {
	return xxx_messageInfo_ReportEventRequest.Size(m)
}
func (m *ReportEventRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReportEventRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReportEventRequest proto.InternalMessageInfo

func (m *ReportEventRequest) GetTxId() string {
	if m != nil {
		return m.TxId
	}
	return ""
}

type ReportEventResponse struct {
	TxId                 string                       `protobuf:"bytes,1,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
	Event                []*ReportEventResponse_Event `protobuf:"bytes,2,rep,name=event,proto3" json:"event,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *ReportEventResponse) Reset()         { *m = ReportEventResponse{} }
func (m *ReportEventResponse) String() string { return proto.CompactTextString(m) }
func (*ReportEventResponse) ProtoMessage()    {}
func (*ReportEventResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_services_0d241728119f9221, []int{5}
}
func (m *ReportEventResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReportEventResponse.Unmarshal(m, b)
}
func (m *ReportEventResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReportEventResponse.Marshal(b, m, deterministic)
}
func (dst *ReportEventResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReportEventResponse.Merge(dst, src)
}
func (m *ReportEventResponse) XXX_Size() int {
	return xxx_messageInfo_ReportEventResponse.Size(m)
}
func (m *ReportEventResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReportEventResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReportEventResponse proto.InternalMessageInfo

func (m *ReportEventResponse) GetTxId() string {
	if m != nil {
		return m.TxId
	}
	return ""
}

func (m *ReportEventResponse) GetEvent() []*ReportEventResponse_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

type ReportEventResponse_Event struct {
	Action               ReportEventResponse_Action `protobuf:"varint,1,opt,name=action,proto3,enum=protocol.ReportEventResponse_Action" json:"action,omitempty"`
	Name                 string                     `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *ReportEventResponse_Event) Reset()         { *m = ReportEventResponse_Event{} }
func (m *ReportEventResponse_Event) String() string { return proto.CompactTextString(m) }
func (*ReportEventResponse_Event) ProtoMessage()    {}
func (*ReportEventResponse_Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_services_0d241728119f9221, []int{5, 0}
}
func (m *ReportEventResponse_Event) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReportEventResponse_Event.Unmarshal(m, b)
}
func (m *ReportEventResponse_Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReportEventResponse_Event.Marshal(b, m, deterministic)
}
func (dst *ReportEventResponse_Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReportEventResponse_Event.Merge(dst, src)
}
func (m *ReportEventResponse_Event) XXX_Size() int {
	return xxx_messageInfo_ReportEventResponse_Event.Size(m)
}
func (m *ReportEventResponse_Event) XXX_DiscardUnknown() {
	xxx_messageInfo_ReportEventResponse_Event.DiscardUnknown(m)
}

var xxx_messageInfo_ReportEventResponse_Event proto.InternalMessageInfo

func (m *ReportEventResponse_Event) GetAction() ReportEventResponse_Action {
	if m != nil {
		return m.Action
	}
	return ReportEventResponse_Add
}

func (m *ReportEventResponse_Event) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func init() {
	proto.RegisterType((*UpdateDeviceRequest)(nil), "protocol.UpdateDeviceRequest")
	proto.RegisterType((*UpdateDeviceResponse)(nil), "protocol.UpdateDeviceResponse")
	proto.RegisterType((*CheckHealthRequest)(nil), "protocol.CheckHealthRequest")
	proto.RegisterType((*CheckHealthResponse)(nil), "protocol.CheckHealthResponse")
	proto.RegisterType((*ReportEventRequest)(nil), "protocol.ReportEventRequest")
	proto.RegisterType((*ReportEventResponse)(nil), "protocol.ReportEventResponse")
	proto.RegisterType((*ReportEventResponse_Event)(nil), "protocol.ReportEventResponse.Event")
	proto.RegisterEnum("protocol.Status", Status_name, Status_value)
	proto.RegisterEnum("protocol.ReportEventResponse_Action", ReportEventResponse_Action_name, ReportEventResponse_Action_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// StorageServiceClient is the client API for StorageService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StorageServiceClient interface {
	UpdateDevice(ctx context.Context, in *UpdateDeviceRequest, opts ...grpc.CallOption) (*UpdateDeviceResponse, error)
	CheckHealth(ctx context.Context, in *CheckHealthRequest, opts ...grpc.CallOption) (*CheckHealthResponse, error)
	// Bidirectional stream, allow later state interruption and initial server side status feedback
	ReportEvent(ctx context.Context, opts ...grpc.CallOption) (StorageService_ReportEventClient, error)
}

type storageServiceClient struct {
	cc *grpc.ClientConn
}

func NewStorageServiceClient(cc *grpc.ClientConn) StorageServiceClient {
	return &storageServiceClient{cc}
}

func (c *storageServiceClient) UpdateDevice(ctx context.Context, in *UpdateDeviceRequest, opts ...grpc.CallOption) (*UpdateDeviceResponse, error) {
	out := new(UpdateDeviceResponse)
	err := c.cc.Invoke(ctx, "/protocol.StorageService/UpdateDevice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storageServiceClient) CheckHealth(ctx context.Context, in *CheckHealthRequest, opts ...grpc.CallOption) (*CheckHealthResponse, error) {
	out := new(CheckHealthResponse)
	err := c.cc.Invoke(ctx, "/protocol.StorageService/CheckHealth", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storageServiceClient) ReportEvent(ctx context.Context, opts ...grpc.CallOption) (StorageService_ReportEventClient, error) {
	stream, err := c.cc.NewStream(ctx, &_StorageService_serviceDesc.Streams[0], "/protocol.StorageService/ReportEvent", opts...)
	if err != nil {
		return nil, err
	}
	x := &storageServiceReportEventClient{stream}
	return x, nil
}

type StorageService_ReportEventClient interface {
	Send(*ReportEventRequest) error
	Recv() (*ReportEventResponse, error)
	grpc.ClientStream
}

type storageServiceReportEventClient struct {
	grpc.ClientStream
}

func (x *storageServiceReportEventClient) Send(m *ReportEventRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *storageServiceReportEventClient) Recv() (*ReportEventResponse, error) {
	m := new(ReportEventResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// StorageServiceServer is the server API for StorageService service.
type StorageServiceServer interface {
	UpdateDevice(context.Context, *UpdateDeviceRequest) (*UpdateDeviceResponse, error)
	CheckHealth(context.Context, *CheckHealthRequest) (*CheckHealthResponse, error)
	// Bidirectional stream, allow later state interruption and initial server side status feedback
	ReportEvent(StorageService_ReportEventServer) error
}

func RegisterStorageServiceServer(s *grpc.Server, srv StorageServiceServer) {
	s.RegisterService(&_StorageService_serviceDesc, srv)
}

func _StorageService_UpdateDevice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateDeviceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageServiceServer).UpdateDevice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.StorageService/UpdateDevice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageServiceServer).UpdateDevice(ctx, req.(*UpdateDeviceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StorageService_CheckHealth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckHealthRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageServiceServer).CheckHealth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.StorageService/CheckHealth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageServiceServer).CheckHealth(ctx, req.(*CheckHealthRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StorageService_ReportEvent_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(StorageServiceServer).ReportEvent(&storageServiceReportEventServer{stream})
}

type StorageService_ReportEventServer interface {
	Send(*ReportEventResponse) error
	Recv() (*ReportEventRequest, error)
	grpc.ServerStream
}

type storageServiceReportEventServer struct {
	grpc.ServerStream
}

func (x *storageServiceReportEventServer) Send(m *ReportEventResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *storageServiceReportEventServer) Recv() (*ReportEventRequest, error) {
	m := new(ReportEventRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _StorageService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protocol.StorageService",
	HandlerType: (*StorageServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UpdateDevice",
			Handler:    _StorageService_UpdateDevice_Handler,
		},
		{
			MethodName: "CheckHealth",
			Handler:    _StorageService_CheckHealth_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ReportEvent",
			Handler:       _StorageService_ReportEvent_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "services.proto",
}

func init() { proto.RegisterFile("services.proto", fileDescriptor_services_0d241728119f9221) }

var fileDescriptor_services_0d241728119f9221 = []byte{
	// 417 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x92, 0xc1, 0x6f, 0x94, 0x40,
	0x14, 0xc6, 0x97, 0xdd, 0x2e, 0xd5, 0xb7, 0x86, 0x90, 0xa1, 0x31, 0x04, 0xad, 0xa9, 0xe8, 0x81,
	0x7a, 0xa0, 0x06, 0x4f, 0x26, 0x5e, 0x9a, 0x56, 0xa3, 0x89, 0x89, 0x06, 0xf4, 0xe0, 0xc9, 0xcc,
	0xc2, 0x93, 0x25, 0xce, 0x32, 0x08, 0x8f, 0xa6, 0x1e, 0xfd, 0x7b, 0xfd, 0x27, 0x0c, 0x33, 0xe8,
	0xb2, 0x29, 0xe5, 0xe6, 0x89, 0x79, 0x6f, 0xbe, 0xf7, 0xe3, 0x9b, 0x97, 0x0f, 0xac, 0x06, 0xeb,
	0xab, 0x22, 0xc5, 0x26, 0xac, 0x6a, 0x49, 0x92, 0xdd, 0x51, 0x9f, 0x54, 0x0a, 0xef, 0x41, 0x2e,
	0x65, 0x2e, 0xf0, 0x4c, 0x35, 0xd6, 0xed, 0xb7, 0x33, 0xdc, 0x56, 0xf4, 0x53, 0xcb, 0xfc, 0x4f,
	0xe0, 0x7c, 0xae, 0x32, 0x4e, 0x78, 0x89, 0xdd, 0x74, 0x8c, 0x3f, 0x5a, 0x6c, 0x88, 0x39, 0xb0,
	0xa4, 0xeb, 0xaf, 0x45, 0xe6, 0x1a, 0x27, 0x46, 0x70, 0x37, 0x3e, 0xa0, 0xeb, 0x77, 0x19, 0x63,
	0x70, 0x50, 0xf2, 0x2d, 0xba, 0x73, 0xdd, 0xeb, 0xce, 0xec, 0x08, 0x96, 0xc4, 0xd7, 0x02, 0xdd,
	0x85, 0x6a, 0xea, 0xc2, 0xdf, 0xc2, 0xd1, 0x3e, 0xb5, 0xa9, 0x64, 0xd9, 0xe0, 0x38, 0x36, 0x00,
	0xb3, 0x21, 0x4e, 0x6d, 0xa3, 0xc0, 0x56, 0x64, 0x87, 0x7f, 0xad, 0x87, 0x89, 0xea, 0xc7, 0xfd,
	0x3d, 0xbb, 0x0f, 0x66, 0x86, 0xc4, 0x0b, 0xd1, 0xff, 0xad, 0xaf, 0xfc, 0x53, 0x60, 0x17, 0x1b,
	0x4c, 0xbf, 0xbf, 0x45, 0x2e, 0x68, 0x33, 0xf5, 0x06, 0x5f, 0x80, 0xb3, 0x27, 0xfd, 0xef, 0xc6,
	0x62, 0xac, 0x64, 0x4d, 0xaf, 0xaf, 0xb0, 0xa4, 0x49, 0x63, 0xbf, 0x0d, 0x70, 0xf6, 0xb4, 0x53,
	0xce, 0x5e, 0xc2, 0x12, 0x3b, 0x95, 0x3b, 0x3f, 0x59, 0x04, 0xab, 0xe8, 0xc9, 0xce, 0xd8, 0x08,
	0x22, 0xd4, 0x95, 0x9e, 0xf0, 0xbe, 0xc0, 0x52, 0xd5, 0xec, 0x15, 0x98, 0x3c, 0xa5, 0x42, 0x96,
	0x8a, 0x6c, 0x45, 0x4f, 0xa7, 0x21, 0xe7, 0x4a, 0x1b, 0xf7, 0x33, 0x63, 0x59, 0xf0, 0x4f, 0xc1,
	0xd4, 0x2a, 0x76, 0x08, 0x8b, 0xf3, 0x2c, 0xb3, 0x67, 0x0c, 0xc0, 0xbc, 0xd8, 0xf0, 0x32, 0x47,
	0xdb, 0xe8, 0xce, 0x97, 0x28, 0x90, 0xd0, 0x9e, 0x3f, 0x7b, 0x0c, 0xa6, 0x5e, 0x21, 0x5b, 0xc1,
	0x61, 0xd2, 0xa6, 0x29, 0x62, 0x2f, 0x7f, 0xc3, 0x0b, 0x81, 0x99, 0x6d, 0x44, 0xbf, 0xe6, 0x60,
	0x25, 0x24, 0x6b, 0x9e, 0x63, 0xa2, 0xa3, 0xcd, 0x3e, 0xc0, 0xbd, 0x61, 0xac, 0xd8, 0xf1, 0xce,
	0xf2, 0x48, 0x88, 0xbd, 0x47, 0xb7, 0x5d, 0xeb, 0x27, 0xf9, 0x33, 0xf6, 0x1e, 0x56, 0x83, 0x34,
	0xb0, 0x87, 0xbb, 0x81, 0x9b, 0x79, 0xf2, 0x8e, 0x6f, 0xb9, 0xfd, 0x47, 0xfb, 0x08, 0xab, 0xc1,
	0xe6, 0x86, 0xb4, 0x9b, 0x21, 0x18, 0xd2, 0x46, 0xd6, 0xed, 0xcf, 0x02, 0xe3, 0xb9, 0xb1, 0x36,
	0x95, 0xe6, 0xc5, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x7d, 0xcc, 0x67, 0xf4, 0xdd, 0x03, 0x00,
	0x00,
}
