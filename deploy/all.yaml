apiVersion: apps/v1
kind: Deployment
metadata:
  name: polardb-sms-manager
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app: polardb-sms-manager
  replicas: 3
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: polardb-sms-manager
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - polardb-sms-manager
              topologyKey: "kubernetes.io/hostname"
      serviceAccountName: polardb-sms-manager
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      priorityClassName: system-node-critical
      tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          operator: Exists
          key: node-role.kubernetes.io/master
        - effect: NoSchedule
          operator: Exists
          key: node.cloudprovider.kubernetes.io/uninitialized
      containers:
        - name: sms-manager
          securityContext:
            privileged: true
            capabilities:
              add: [ "SYS_ADMIN" ]
            allowPrivilegeEscalation: true
          args:
            - "--log_level=DEBUG"
            - "--node_id=$(NODE_ID)"
            - "--node_ip=$(NODE_IP)"
          image: polardb/polardb-sms-manager:1.0.0
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
              ephemeral-storage: 512Mi
            requests:
              cpu: 10m
              memory: 96Mi
              ephemeral-storage: 512Mi
          env:
            - name: NODE_ID
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: KUBERNETES_SERVICE_HOST
              value: 10.0.0.77
            - name: KUBERNETES_SERVICE_PORT
              value: "6443"
            - name: ACCESS_KEY_ID
              value: ""
            - name: ACCESS_KEY_SECRET
              value: ""
            - name: HOST_USERNAME
              value: ""
            - name: LOG_TYPE
              value: "file"
            - name: SERVER_PORT
              value: "18888"
          volumeMounts:
            - mountPath: /var/log/alicloud
              name: kube-log-controller
            - mountPath: /etc/localtime
              name: localtime
            - mountPath: /home
              name: home
            - name: polardb-sms-manager-conf
              mountPath: "/var/lib/polardb-sms/manager/manager.conf"
              subPath: "manager.conf"
              readOnly: true
      volumes:
        - name: kube-log-controller
          hostPath:
            path: /var/log/polardb-box/polardb-sms/manager
            type: DirectoryOrCreate
        - hostPath:
            path: /etc/localtime
          name: localtime
        - name: home
          hostPath:
            path: /home
        - name: polardb-sms-manager-conf
          configMap:
            name: polardb-sms-manager
            items:
              - key: "app_conf"
                path: "manager.conf"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: polardb-sms-manager
  namespace: kube-system
data:
  app_conf: |
    [server]
    port=2002
    id=1
    [cluster]
    vip=10.11.11.11
    mode=docker
    [log]
    level=INFO
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: polardb-sms-manager
  name: polardb-sms-manager
  namespace: kube-system
spec:
  ports:
    - port: 2002
      protocol: TCP
      targetPort: 2002
      nodePort: 2003
  selector:
    app: polardb-sms-manager
  type: NodePort
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: system:polardb-sms-manager
rules:
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshotcontents"]
    verbs: ["create", "get", "list", "watch", "update", "delete"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshots"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups:
      - ""
    resources:
      - persistentvolumes
      - persistentvolumeclaims
      - services
      - secrets
      - endpoints
      - serviceaccounts
      - configmaps
      - namespaces
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
      - list
      - watch
      - delete
      - patch
      - update
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - services/status
    verbs:
      - update
  - apiGroups:
      - ""
    resources:
      - persistentvolumeclaims/status
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - pods/status
    verbs:
      - update
  - apiGroups:
      - ""
    resources:
      - nodes/status
    verbs:
      - patch
      - update
  - apiGroups:
      - ""
    resources:
      - events
      - endpoints
    verbs:
      - create
      - patch
      - update
      - get
      - list
      - delete
      - watch
  - apiGroups:
      - storage.k8s.io
    resources:
      - storageclasses
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: system:polardb-sms-manager
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:polardb-sms-manager
subjects:
  - kind: ServiceAccount
    name: polardb-sms-manager
    namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: polardb-sms-manager
  namespace: kube-system
---
apiVersion: v1
data:
  metabase.yml: |-
    metabase:
      host: 10.0.0.10
      port: 3306
      user: polar
      password: password
      type: mysql
      version: 5.7.31
kind: ConfigMap
metadata:
  name: metabase-config
  namespace: kube-system
